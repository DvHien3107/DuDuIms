@model EnrichcousBackOffice.Models.O_Service
@using EnrichcousBackOffice.Models

@{
    var list_ServiceType = ViewBag.ServiceType as List<O_ServiceType>;
}

<section class="content-header">
    <h1>
        @ViewBag.Title
        <small>Product</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/home"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li><i class="fa fa-files-o"></i> Product</li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        @if (TempData["error"] != null)
        {
            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-warning"></i> @TempData["error"]</span>
            </div>
        }
        else if (TempData["success"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-check"></i> @TempData["success"]</span>
            </div>
        }


        <div class="col-md-10">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">@ViewBag.Title</h3>

                    <div class="box-tools pull-right">
                        <a href="/service" class="btn btn-sm" data-toggle="tooltip" title="Go back" data-original-title="Go back">
                            <i class="fa fa-arrow-left"></i> Go back
                        </a>

                        @if (string.IsNullOrEmpty(Model.ServiceCode) == false)
                        {
                            <a href='/service/save' class="btn btn-sm" data-toggle="tooltip" title="Add new" data-original-title="Add new">
                                <i class="fa fa-plus">Add new service</i>
                            </a>
                        }
                    </div>
                </div>


                <form role="form" class="form-horizontal" action="/service/savesubmit" method="post">
                    @Html.HiddenFor(m => m.ServiceCode)
                    <div class="box-body">

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Service type <span style="color:red">*</span></label>
                            <div class="col-sm-9">
                                <select name="Type" class="form-control" onchange="select_service()" required>
                                    <option value="">-- Select service type --</option>

                                    @if (list_ServiceType != null && list_ServiceType.Count() > 0)
                                    {
                                        foreach (var item in list_ServiceType)
                                        {
                                            <option @if (Model?.ServiceType?.Equals(item.TypeCode) == true) { @Html.Raw("selected") } value="@item.TypeCode">@item.Name</option>
                                        }
                                    }
                                </select>

                                <p class="help-block">
                                    <button type="button" class="btn btn-sm" onclick="add_edit_type('add')"><i class="fa fa-plus"></i> Add type</button>
                                    <button type="button" class="btn btn-sm" onclick="add_edit_type('edit')"><i class="fa fa-edit"></i> Edit </button>
                                    <button type="button" class="btn btn-sm" onclick="delete_type()"><i class="fa fa-trash"></i> Delete </button>
                                </p>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Service name <span style="color:red">*</span></label>
                            <div class="col-sm-9">
                                <input type="text" name="Name" class="form-control" value="@(Model?.Name)" required />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Setup Fee</label>
                            <div class="col-sm-9">
                                <input type="text" name="SetupFee" class="form-control" value="@(Model?.SetupFee ?? 0)" onblur="checkMoney('SetupFee')" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Monthly Fee</label>
                            <div class="col-sm-9">
                                <input type="text" name="SalesPrice" class="form-control" value="@(Model?.SalesPrice ?? 0)" onblur="checkMoney('SalesPrice')" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Quantity SMS/Email</label>
                            <div class="col-sm-9">
                                <input type="number" name="Quantity_SMS_Email" class="form-control" value="@(Model?.Quantity_SMS_Email ?? 0)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Description</label>
                            <div class="col-sm-9">
                                <textarea required name="_Description" id="editor1">@Html.Raw(Model?.Description)</textarea>
                            </div>
                        </div>
                    </div>


                    @if (string.IsNullOrEmpty(Model.ServiceCode) == false)
                    {
                        <div class="checkbox">
                            <label for="Active" class="col-sm-3 control-label"> </label>
                            <div class="col-sm-9">
                                <label> @Html.CheckBox("Active", Model?.Active) Active</label>
                            </div>
                        </div>
                    }

                    <div class="box-footer" style="float:right">
                        @*<button type="submit" class="btn btn-primary" name="submit" value="1">Save &amp; Go back</button>*@
                        <a href="/service" class="btn btn-sm" data-toggle="tooltip" title="Go back" data-original-title="Go back">
                            <i class="fa fa-arrow-left"></i> Go back
                        </a>
                        <button type="submit" class="btn btn-primary" name="submit" value="0">Save</button>
                    </div>
                    <div class="clearfix"></div>
                </form>
            </div>
        </div>
    </div>
</section>


<!--Modal service type-->
<div class="modal fade" id="modal-type">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 id="modal-type-title" class="modal-title">Modal Title</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" name="hd_type_code" />
                <p>
                    <label>Type code <span style="color:red">*</span></label>
                    <input type="text" class="form-control" onblur="check_code()" name="type_code" placeholder="Type code" required />
                </p>
                <p>
                    <label>Type name  <span style="color:red">*</span></label>
                    <input type="text" name="type_name" class="form-control" placeholder="Type name" required />
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="save_type()">Save</button>
            </div>
        </div>
    </div>
</div>
<!--/.End-->




@section style{
    <link href="~/Content/noty/jquery.noty.css" rel="stylesheet" />
    <link href="~/Content/noty/noty_theme_default.css" rel="stylesheet" />
}

@section script
{
    <script src="~/Content/noty/jquery.noty.js"></script>
    <!-- CK Editor -->
    <script src="~/Content/admin/bower_components/ckeditor/ckeditor.js"></script>


    <script>

        $(function () {
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            CKEDITOR.replace('editor1');
        })

        //Check code - khong nhap nhap ky tu dat biet cho TypeCode (tru ky tu '_')
        function check_code() {
            var typeCode = $("input[name='type_code']").val();
            var character_code = typeCode.split("");

            for (var i = 0; i < character_code.length; i++) {

                var re = new RegExp("[0-9]|[a-z]|_", "gi");
                var check = re.test(character_code[i]);

                if (check == false) {
                    typeCode = typeCode.replace(character_code[i], "");
                }
            }

            $("input[name='type_code']").val(typeCode);
        }
        
        //Click button add new type or edit type
        function add_edit_type(key) {
            if (key == "add") {
                $("input[name='hd_type_code']").val("");
                $("#modal-type-title").html("Add service type");
                $("input[name='type_code']").val("");
                $("input[name='type_name']").val("");

                $("input[name='type_code']").prop("disabled", false);
                $("#modal-type").modal("show");
            }

            if (key == "edit") {
                var typeCode = $("select[name='Type']").val();

                if (typeCode == "") {
                    var optionsErr = $.parseJSON('{"text":"Please choose service type!","layout":"topRight","type":"error"}');
                    noty(optionsErr);
                }
                else {

                    $.ajax({
                        url: "/service/gettypeinfo",
                        method: "GET",
                        data: { TypeCode: typeCode },
                        dataType: "json"
                    })
                        .done(function (data) {
                            //data = object[] {true/false, type/message}

                            if (data[0] == true) {
                                $("input[name='hd_type_code']").val(data[1].TypeCode);
                                $("#modal-type-title").html("Edit service type: " + data[1].Name);
                                $("input[name='type_code']").val(data[1].TypeCode);
                                $("input[name='type_name']").val(data[1].Name);

                                $("input[name='type_code']").prop("disabled", true);
                                $("#modal-type").modal("show");
                            }
                            else {
                                var optionsErr = $.parseJSON('{"text":"' + data[1] + '","layout":"topRight","type":"error"}');
                                noty(optionsErr);
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            var optionsErr = $.parseJSON('{"text":"There was a problem, please try again later. ' + errorThrown + '","layout":"topRight","type":"error"}');
                            noty(optionsErr);
                        });

                }
            }
        }

        //Save type
        function save_type() {
            var hd_type_code = $("input[name='hd_type_code']").val();
            var typeCode = $("input[name='type_code']").val();
            var typeName = $("input[name='type_name']").val();

            if (typeCode == "" || typeName == "") {
                var optionsErr = $.parseJSON('{"text":"Type code and service name is required.","layout":"topRight","type":"error"}');
                noty(optionsErr);
            }
            else {

                $.ajax({
                    url: "/service/savetype",
                    method: "POST",
                    data: { hd_TypeCode: hd_type_code, TypeCode: typeCode, TypeName: typeName },
                    dataType: "json"
                })
                    .done(function (data) {
                        //data = object[] {true/false, list_Type/message, TypeCode/null}

                        if (data[0] == true) {

                            $("select[name='Type']").empty();
                            var _option = "<option value=''>-- Select service type --</option>";

                            for (var i = 0; i < data[1].length; i++) {
                                if (data[1][i].TypeCode == data[2]) {
                                    _option = _option + "<option selected value='" + data[1][i].TypeCode + "'>" + data[1][i].Name + "</option>";
                                }
                                else {
                                    _option = _option + "<option value='" + data[1][i].TypeCode + "'>" + data[1][i].Name + "</option>";
                                }
                            }
                            $("select[name='Type']").append(_option);

                            if (hd_type_code == "") {
                                var optionsSuccess = $.parseJSON('{"text":"Add new type success!","layout":"topRight","type":"success"}');
                                noty(optionsSuccess);
                            }
                            else {
                                var optionsSuccess = $.parseJSON('{"text":"Edit type success!","layout":"topRight","type":"success"}');
                                noty(optionsSuccess);
                            }

                            $("#modal-type").modal("hide");
                        }
                        else {
                            var optionsErr = $.parseJSON('{"text":"' + data[1] + '","layout":"topRight","type":"error"}');
                            noty(optionsErr);
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        var optionsErr = $.parseJSON('{"text":"There was a problem, please try again later. ' + errorThrown + '","layout":"topRight","type":"error"}');
                        noty(optionsErr);
                    });

            }
        }

        //Delete device type
        function delete_type() {
            var typeCode = $("select[name='Type']").val();

            if (typeCode == "") {
                var optionsErr = $.parseJSON('{"text":"Please choose service type!","layout":"topRight","type":"error"}');
                noty(optionsErr);
            }
            else {

                if (confirm("You want to delete this service type?") == true) {

                    $.ajax({
                        url: "/service/deletetype",
                        method: "POST",
                        data: { TypeCode: typeCode },
                        dataType: "json"
                    })
                        .done(function (data) {
                            //data = object[] {true/false, list_Type/message}

                            if (data[0] == true) {

                                $("select[name='Type']").empty();
                                var _option = "<option value=''>--Select service type--</option>";

                                for (var i = 0; i < data[1].length; i++) {
                                    _option = _option + "<option value='" + data[1][i].TypeCode + "'>" + data[1][i].Name + "</option>";
                                }
                                $("select[name='Type']").append(_option);


                                var optionsSuccess = $.parseJSON('{"text":"Delete type success!","layout":"topRight","type":"success"}');
                                noty(optionsSuccess);
                            }
                            else {
                                var optionsErr = $.parseJSON('{"text":"' + data[1] + '","layout":"topRight","type":"error"}');
                                noty(optionsErr);
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            var optionsErr = $.parseJSON('{"text":"There was a problem, please try again later. ' + errorThrown + '","layout":"topRight","type":"error"}');
                            noty(optionsErr);
                        });
                }

            }
        }

    </script>

}

