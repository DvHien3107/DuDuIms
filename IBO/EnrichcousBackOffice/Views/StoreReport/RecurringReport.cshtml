@using Inner.Libs.Helpful;
@using EnrichcousBackOffice.Models
@using EnrichcousBackOffice.Utils.IEnums
@using EnrichcousBackOffice.AppLB

@{
    ViewBag.Title = "Services report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cMem = Authority.GetCurrentMember();
    var FromSearch = ViewBag.From as DateTime?;
    var ToSearch = ViewBag.To as DateTime?;

    var Services = ViewBag.Services as List<License_Product> ?? new List<License_Product>() { };
    var gr_Services = Services.GroupBy(c => c.Type).Select(c => new
    {
        Type = c.Key,
        Service = c.ToList()
    }).OrderByDescending(c => c.Type == "license").ThenBy(c => c.Type == "other").ToList();

}

<link rel="stylesheet" href="/content/admin/plugins/iCheck/all.css" />
<link href="~/Content/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet" />
<style>
    .input-group-addon {
        background-color: #d9edf7 !important;
        color: black;
    }

    .cardIcon {
        background: url("../Areas/PaymentGate/Content/Images/sprite_logos_wallet_v10_1x.png") no-repeat 0 100px;
        height: 22px;
        margin-right: 5px;
        float: left;
        width: 32px;
        padding: 0 4px 0 0
    }

    .ELO {
        background-position: 0 -713px
    }

    .CUP {
        background-position: 0 -837px
    }

    .VISA {
        background-position: 0 -31px
    }

    .RUPAY {
        background-image: url(https://www.paypalobjects.com/images/checkout/hermes/rupay_logo.svg);
        background-position: 0 0;
        background-size: 32px 20px;
        background-repeat: no-repeat
    }

    .MASTERCARD {
        background-position: 0 -62px
    }

    .HIPER {
        background-position: 0 -682px
    }

    .HIPERCARD {
        background-position: 0 -744px
    }

    .AMEX {
        background-position: 0 -93px;
        margin-right: -5px
    }

    .JCB {
        background-position: 0 -527px
    }

    .ELECTRON {
        background-position: 0 -217px
    }

    .MAESTRO, .SWITCH {
        background-position: 0 -248px
    }

    .DISCOVER {
        background-position: 0 -124px
    }

    .CBNATIONALE {
        background-position: 0 -310px
    }

    .CETELEM {
        background-position: 0 -465px
    }

    .COFIDIS {
        background-position: 0 -651px;
        margin-right: -5px
    }

    .COFINOGA {
        background-position: 0 -341px
    }

    .QIWI {
        background-position: 0 -806px;
        width: 30px
    }

    .discount-group {
    }

        .discount-group .input-group-addon {
            padding: 0;
        }

            .discount-group .input-group-addon label {
                margin: 0;
                width: 35px;
                height: 100%;
                display: block;
                opacity: 0.3;
            }

                .discount-group .input-group-addon label i {
                    line-height: 32px;
                    width: 100%;
                    cursor: pointer;
                }

                .discount-group .input-group-addon label.active {
                    color: #fff;
                    background-color: #17a2b8;
                    border-color: #17a2b8;
                    opacity: 1;
                }
</style>

<section class="content-header">
    <h1>
        Recurring reports
        <small>report</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/home"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li><i class="fa fa-bar-chart"></i> Recurring reports</li>
    </ol>
</section>

<section class="content">
    <div class="row">

        @if (TempData["e"] != null)
        {
            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-warning"></i> @TempData["e"]</span>
            </div>
        }
        else if (TempData["s"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-check"></i> @TempData["s"]</span>
            </div>
        }
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Service list</h3>
                </div>
                <!-- /.box-header -->

                <div class="box-body">
                    <div class="row">
                        <div class="col-md-3 col-sm-6 form-group">
                            <div class="input-group" style="width:100%">
                                <div class="input-group-addon" style="width:100px;"><i class="fa fa-calendar" aria-hidden="true"></i> Date</div>
                                <input type="text" class="form-control daterange search-change" id="time" />
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <div class="input-group" style="width:100%">
                                <div class="input-group-addon">
                                    Subscription
                                </div>
                                <select class="form-control search-change select2" name="s_subcription" id="s_subcription" data-placeholder="N/A" multiple>
                                    @foreach (var grp in gr_Services)
                                    {
                                        if (grp.Type == LicenseType.LICENSE.Text())
                                        {
                                            <optgroup label="Licenses"></optgroup>
                                        }
                                        else if (grp.Type == LicenseType.ADD_ON.Text())
                                        {
                                            <optgroup label="Add-on"></optgroup>
                                        }
                                        else if (grp.Type == LicenseType.GiftCard.Text())
                                        {
                                            <optgroup label="Giftcard"></optgroup>
                                        }
                                        else if (grp.Type == LicenseType.VirtualHardware_Other.Text())
                                        {
                                            <optgroup label="Other services"></optgroup>
                                        }
                                        foreach (var item in grp.Service)
                                        {
                                            <option value="@item.Code">@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <div class="input-group" style="width:100%">
                                <div class="input-group-addon">
                                    Recurring Status
                                </div>
                                <select class="form-control search-change" name="s_recurringStatus" id="s_recurring_status">
                                    <option value="-2" style="font-weight:bolder">All</option>
                                    <option value="1" style="color: green;font-weight:bolder">Active</option>
                                    <option value="0" style="color: orange; font-weight: bolder">Inactive</option>
                                    <option value="-1" style="color: darkred; font-weight: bolder">Rermoved</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <div class="input-group" style="width:100%">
                                <div class="input-group-addon">
                                    Search
                                </div>
                                <input class="form-control search-change" id="s_searchText" value="" placeholder="Input search text..." />
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="render-table">
                        <table class="table table-bordered table-hover" id="table-service" style="width:100%">
                            <thead>
                                <tr class="bg-info">
                                    <th>#</th>
                                    <th>Store Name</th>
                                    <th>Activated License</th>
                                    <th>Recurring</th>
                                    <th>Enable</th>
                                    <th>History</th>
                                    <th>Last Order Status</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>

    </div>
</section>


<div class="modal fade" id="modal-planning" tabindex="0" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form method="post" action="/StoreReport/SaveRecurringPlan" id="form-planning" onsubmit="overlayOn()">
                    <input type="hidden" value="" name="Id" />
                    <input type="hidden" value="" name="ApplyDiscountAsRecurring" />
                    <input type="hidden" value="" name="DiscountPercent" />
                    <input type="hidden" value="" name="Discount" />
                    <input type="hidden" value="" name="Status" />
                    <input type="hidden" value="" name="TotalRecurringPrice" id="TotalRecurringPrice" />
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>Store: <i id="data_store"></i></label>
                        </div>
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>Subscription: <i id="data_subscription"></i></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="padding-bottom:20px">
                            <label>Recurring price <span style="color:red">*</span></label>
                            <div class="input-group">
                                <span class="input-group-addon">$</span>
                                <input id="Price" name="Price" min="0" class="form-control prd_price" onchange="changeDiscount()" type="number" required />
                            </div>
                        </div>
                        <div class="col-md-6" style="padding-bottom:20px">
                            <label>Recurring date <span style="color:red">*</span></label>
                            <input id="RecurringDate" name="RecurringDate" class="form-control datepicker" required />
                        </div>
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>Discount</label>
                            <div class="input-group discount-group">
                                <input type="number" step="0.01" class="form-control disable-enter" name="DiscountValue" id="DiscountValue" onchange="changeDiscount()"
                                       value="" style="text-align: right;" />
                                <div class="input-group-addon">
                                    <input type="radio" id="discount-amount" name="discount" value="discount-amount" class="disable-enter" style="display:none" />
                                    <label for="discount-amount" class="discount-amount active" style="margin: 0" onclick="changeDiscount('amount')">
                                        <i class="fa fa-dollar" data-toggle="tooltip" title="Amount"></i>
                                    </label>
                                </div>
                                <div class="input-group-addon">
                                    <input type="radio" id="discount-rate" name="discount" value="discount-rate" class="disable-enter" style="display:none" />
                                    <label for="discount-rate" class="discount-rate" style="margin: 0" onclick="changeDiscount('rate')">
                                        <i class="fa fa-percent" data-toggle="tooltip" title="Rate"></i>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>
                                <input type="checkbox" name="ApplyDiscount" id="ApplyDiscount" class="flat-red card_type"> Apply discount as recurring
                            </label>
                        </div>
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>
                                <input type="checkbox" name="recurringStatus" id="recurringStatus" class="flat-red card_type"> Active recurring
                            </label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:20px">
                            <label>Total recurring: <i id="data_total" style="font-size:20px"></i></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-primary pull-right" onsubmit="overlayOn()" id="btn-save-cam">Save</button>
                            <button type="button" class="btn btn-danger pull-left" onclick="deleteRecurring()">Delete</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-histories" tabindex="0" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <table style="width:100%">
                    <thead>
                        <tr>
                            <th>Order</th>
                            <th>Recurring date</th>
                            <th>Grand total</th>
                            <th>Message</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody class="content-histories">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section script
{
    <script src="~/Content/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script src="/content/admin/plugins/iCheck/icheck.min.js"></script>
    <script src="http://malsup.github.com/jquery.form.js"></script>

    <script>
        var _dataPlanning = null;
        var planning = null;
        $(function () {
            $('.daterange').daterangepicker(
                {
                    "showDropdowns": true,
                    "minYear": 2000,
                    "maxYear": 2050,
                    "autoApply": true,
                    //"alwaysShowCalendars": true,
                    "ranges": {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().add(-1, 'days'), moment().add(-1, 'days')],
                        'Tomorow': [moment().add(1, 'days'), moment().add(1, 'days')],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Next Month': [moment().add(1, 'month').startOf('month'), moment().add(1, 'month').endOf('month')],
                        'This Year': [moment().startOf('year'), moment().endOf('year')],
                        'Next Year': [moment().add(1, 'year').startOf('year'), moment().add(1, 'year').endOf('year')]
                    },
                    "locale": {
                        "customRangeLabel": "Custom Date",
                        "format": "MMM D, YYYY",
                    },
                    "startDate": moment().startOf('month'),
                    "endDate": moment().endOf('month'),
                });
            var t = $("#table-service").DataTable({
                "language": {
                    "processing": '<img src="/Content/ajax-loaders/loading2.gif" width="60px" />',
                    "paginate": {
                        "first": '<i class="fa fa-angle-double-left" aria-hidden="true"></i>',
                        "last": '<i class="fa fa-angle-double-right" aria-hidden="true"></i>',
                        "next": '<i class="fa fa-angle-right" aria-hidden="true"></i>',
                        "previous": '<i class="fa fa-angle-left" aria-hidden="true"></i>'
                    },
                },
                //"columnDefs": [{
                //    "targets": 'no-sort',
                //    "orderable": false,
                //}],
                'paging': true,
                "pageLength": 10,
                "serverSide": true, // for process server side
                "processing": true, // for show progress bar
                'lengthChange': true,
                'searching': false,
                //'ordering': false,
                'stateSave': false,
                'info': false,
                "scrollX": true,
                'autoWidth': true,
                "order": [[0, "desc"]],
                "ajax": {
                    "url": "/storereport/LoadRecurringPlan",
                    "type": "POST",
                    "datatype": "json",
                    data: function (data) {
                        data.searchText = $("#s_searchText").val();
                        data.status = $("#s_recurring_status").val();
                        data.slicense = $("#s_subcription").val();
                        data.fromDate = $('.daterange').data('daterangepicker').startDate.format('YYYY-MM-DD');
                        data.toDate = $('.daterange').data('daterangepicker').endDate.format('YYYY-MM-DD');
                        console.log(data);
                        return data;
                    },
                    'dataSrc': function (data) {
                        _dataPlanning = data.data;
                        return data.data;
                    },
                    "complete": function (json) { }
                },
                'fnCreatedRow': function (nRow, aData, iDataIndex) {
                    $(nRow).hover(
                        function () {
                            $(this).find('.btn_group').css({ opacity: 0.0, visibility: "visible" }).animate({ opacity: 1.0 });
                        },
                        function () {
                            $(this).find('.btn_group').css({ opacity: 0.0, visibility: "hidden" }).animate({ opacity: 1.0 });
                        }
                    )
                },
                "columns": [
                    {
                        name: 'Id',
                        render: function (data, type, row, meta) {
                            return `<b>#${row['planning'].Id}</b>`;
                        },
                    },
                    {
                        name: 'CustomerCode',
                        render: function (data, type, row, meta) {
                            let html = '';
                            html += `<a target="_blank" href="/merchantman/detail/${row['customer']?.Id}"><b class="text-success">${row['customer'].BusinessName} </b></a>`;
                            if (row['customer']?.PartnerCode != null && row['customer']?.PartnerCode != '')
                                html += `<span class="label label-default"> #${row['customer']?.PartnerCode}</span>`;
                            html += `<br/><i>Store Code: <b>${row['customer']?.StoreCode}</b></i>`
                            html += `<br/><i>Phone: ${row['customer']?.SalonPhone ?? 'N/A'}</i>`;
                            html += `<br/><i>Email: ${row['customer']?.SalonEmail ?? 'N/A'}</i>`;
                            return html;
                        },
                    },
                    {
                        name: 'ProductCode',
                        render: function (data, type, row, meta) {
                            let html = '';
                            html += `<b>${row['license']?.Name}</b></br>`;
                            html += `Quantity: <b>${row['planning'].SubscriptionQuantity ?? 1}</b></br>`;
                            html += 'Price: ' + Math.abs(row['planning'].Price).toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                            if (row['planning'].ApplyDiscountAsRecurring == true) {
                                if (row['planning'].DiscountPercent != null && row['planning'].DiscountPercent != 0) {
                                    html += '<br>Discount: ' + Math.abs(row['planning'].DiscountPercent) + '%';
                                }
                                else if (row['planning'].Discount != null && row['planning'].Discount != 0) {
                                    html += '<br>Discount: ' + Math.abs(row['planning'].Discount).toLocaleString('en-US', {
                                        style: 'currency',
                                        currency: 'USD',
                                    });
                                }
                            }

                            return html;
                        },
                    },
                    {
                        name: 'Recurring',
                        render: function (data, type, row, meta) {
                            let html = '';
                            let offset = moment().utcOffset();
                            if (row['planning']?.RecurringDate != null) {
                                let local = moment.utc(row['planning']?.RecurringDate).utcOffset(offset).format("MMM DD, YYYY");
                                html += `Next recurring: <b>${local}</b>`;
                            }
                            else {
                                html += 'N/A';
                            }
                            if (row['planning'].TotalRecurringPrice == null)
                                row['planning'].TotalRecurringPrice = row['planning'].Price * (row['planning'].SubscriptionQuantity ?? 1)
                                    - (row['planning'].ApplyDiscountAsRecurring == true ? (row['planning'].Discount ?? 0) : 0)
                            html += '<br>Recurring price: <b>' + Math.abs(row['planning'].TotalRecurringPrice).toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            }) + '</b>';
                            html += `<br>Recurring with: ${row['planning'].RecurringType ?? "None"}`;
                            return html;
                        },
                    },
                    {
                        name: 'RecurringStatus',
                        render: function (data, type, row, meta) {
                            let html = '';
                            if (row['planning']?.Status == 1)
                                html += `<span class="label label-success">ON</span>`;
                            else if (row['planning']?.Status == 0)
                                html += `<span class="label label-warning">OFF</span>`;
                            else
                                html += `<span class="label label-danger">Removed</span>`;
                            return html;
                        },
                    },
                    {
                        name: 'History',
                        render: function (data, type, row, meta) {
                            let html = '';
                            if (moment.utc().isBefore($('.daterange').data('daterangepicker').endDate)) {
                                html = `<td><span class='label label-default'>Waiting</span></td>`
                            }
                            else {
                                if (row['histories'].length > 0) {
                                    let history = row['histories'][row['histories'].length - 1];
                                    if (history.Status == 0) {
                                        html = `<td><span class='label label-warning'>Incomplete</span></td>`
                                    }
                                    else {
                                        html = `<td><span class='label label-success'>Complete</span></td>`
                                    }
                                }
                                else html = `<td><span class='label label-default'>Waiting</span></td>`
                            }
                            return html;
                        },
                    },
                    {
                        name: 'OrderStatus',
                        render: function (data, type, row, meta) {
                            let html = '';
                            if (row['histories'].length > 0) {
                                if (row['order'].Status == "Open") html = `<span class='label label-default'>Open</span>`;
                                else if (row['order'].Status == "Paid_Wait") html = `<span class='label label-primary'>Paid Wait</span>`;
                                else if (row['order'].Status == "PaymentLater") html = `<span class='label label-primary'>Payment Later</span>`;
                                else if (row['order'].Status == "Closed") html = `<span class='label label-success'>Complete</span>`;
                            }
                            else html = `<span class='label label-default'>N/A</span>`
                            return html;
                        },
                    },
                    {
                        name: 'Action',
                        render: function (data, type, row, meta) {
                            let html = '<div class="btn_group" style="visibility:hidden;">';
                            if (row['planning']?.Status >= 0) {
                                html += `<button type="button" class="btn btn-warning btn-sm pull-right btn-edit" onclick="popupPlanning('${row['planning'].Id}')"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>`;
                            }
                            html += `<button type="button" class="btn btn-info btn-sm pull-right" onclick="popupHistories('${row['planning'].Id}')" style="margin-right:5px"><i class="fa fa-history" aria-hidden="true"></i> Histories</button></div>`;
                            return html;
                        },
                    },
                ]
            });
            $(".search-change").change(function () {
                t.draw();
            });
            $("#RecurringDate").datepicker({
                showAnim: 'slideDown',
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                yearRange: '2000:2050',
                dateFormat: 'M dd, yy'
            });
            $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
                checkboxClass: 'icheckbox_flat-blue',
                radioClass: 'iradio_flat-blue'
            });
            $("#modal-planning #ApplyDiscount").on('ifChanged', function () {
                changeDiscount();
            });

            $("#modal-planning #recurringStatus").on('ifChanged', function () {
                $("input[name='Status']").val($("#modal-planning #recurringStatus").is(":checked") ? 1 : 0);
            });

            $('#form-planning').ajaxForm(function (data) {
                if (data[0]) {
                    noty({ "text": data[1], "layout": "topRight", "type": "success" });
                    t.draw();
                    $("#modal-planning").modal("hide");
                } else {
                    noty({ "text": data[1], "layout": "topRight", "type": "error" });
                }
                overlayOff();
            });
        })

        function popupPlanning(id) {
            planning = _dataPlanning.find(c => c.planning.Id == id);
            if (planning.planning.ApplyDiscountAsRecurring == true) {
                $('#modal-planning #ApplyDiscount').iCheck('check').iCheck('update');
            }
            else {
                $('#modal-planning #ApplyDiscount').iCheck('uncheck').iCheck('update');
            }

            $('#modal-planning .modal-title').html('Edit recurring planning #' + planning.planning.Id)
            $('#modal-planning #data_store').html(planning.customer.BusinessName);
            $('#modal-planning #data_subscription').html(`${planning.license.Name} <b>x${planning.planning.SubscriptionQuantity ?? 1}</b>`);
            $('#modal-planning #Price').val(planning.planning.Price.toFixed(2));
            $('#modal-planning #data_total').text("$" + planning.planning.TotalRecurringPrice);
            $('#modal-planning #TotalRecurringPrice').val(planning.planning.TotalRecurringPrice);
            $('#modal-planning #RecurringDate').val(moment(planning.planning.RecurringDate).format('MMM DD, YYYY'));

            if (planning.planning.Status == true) {
                $('#modal-planning #recurringStatus').iCheck('check').iCheck('update');
            }
            else {
                $('#modal-planning #recurringStatus').iCheck('uncheck').iCheck('update');
            }
            if (planning.planning.DiscountPercent != null && planning.planning.DiscountPercent != 0) {
                $('#modal-planning #DiscountValue').val(planning.planning.DiscountPercent.toFixed(2));
                $('#modal-planning .discount-amount').removeClass('active');
                $('#modal-planning .discount-rate').addClass('active');
                $('#modal-planning #discount-amount').prop("checked", false);
                $('#modal-planning #discount-rate').prop("checked", true);
            }
            else if (planning.planning.Discount != null && planning.planning.Discount != 0) {
                $('#modal-planning #DiscountValue').val(planning.planning.Discount.toFixed(2));
                $('#modal-planning .discount-amount').addClass('active');
                $('#modal-planning .discount-rate').removeClass('active');
                $('#modal-planning #discount-amount').prop("checked", true);
                $('#modal-planning #discount-rate').prop("checked", false);
            }
            else {
                $('#modal-planning #DiscountValue').val('0.00');
                $('#modal-planning .discount-amount').addClass('active');
                $('#modal-planning .discount-rate').removeClass('active');
                $('#modal-planning #discount-amount').prop("checked", true);
                $('#modal-planning #discount-rate').prop("checked", false);
            }
            $('#modal-planning').modal();
            $("input[name='Id']").val(planning.planning.Id);
            $("input[name='ApplyDiscountAsRecurring']").val(planning.planning.ApplyDiscountAsRecurring);
            $("input[name='DiscountPercent']").val(planning.planning.DiscountPercent);
            $("input[name='Discount']").val(planning.planning.Discount);
            $("input[name='Status']").val(planning.planning.Status);
            $("input[name='TotalRecurringPrice']").val(planning.planning.TotalRecurringPrice);

        }
        function changeDiscount(type) {
            if (type == 'rate') {
                $('#modal-planning .discount-amount').removeClass('active');
                $('#modal-planning .discount-rate').addClass('active');
                $('#modal-planning #discount-amount').prop("checked", false);
                $('#modal-planning #discount-rate').prop("checked", true);
            }
            else if (type == 'amount') {
                $('#modal-planning .discount-amount').addClass('active');
                $('#modal-planning .discount-rate').removeClass('active');
                $('#modal-planning #discount-amount').prop("checked", true);
                $('#modal-planning #discount-rate').prop("checked", false);
            }
            //else return;
            var applyDiscount = $("#modal-planning #ApplyDiscount").is(":checked");
            var discountType = $("input[name='discount']:checked").val();
            var price = $('#modal-planning #Price').val() ?? 0;
            var quantity = planning.planning.SubscriptionQuantity ?? 1;
            var discountValue = applyDiscount == true ? ($('#modal-planning #DiscountValue').val() ?? 0) : 0;
            var total = calculatorTotal(price, quantity, discountValue, discountType, applyDiscount);
            $('#modal-planning #data_total').html("$" + total);
            $('#modal-planning #TotalRecurringPrice').val(total);
        }
        function calculatorTotal(price, quantity, discountValue, discountType, applyDiscount) {
            $("input[name='ApplyDiscountAsRecurring']").val(applyDiscount);
            var total = price * quantity;
            if (discountType == 'discount-rate') {
                discountValue = discountValue > 100 ? 100 : discountValue;
                $("input[name='DiscountPercent']").val(discountValue);
                $("input[name='Discount']").val(total * discountValue / 100);
                total = total * (100 - discountValue) / 100;
            }
            else {
                discountValue = discountValue > total ? total : discountValue;
                $("input[name='DiscountPercent']").val(0);
                $("input[name='Discount']").val(discountValue);
                total -= discountValue
            }
            $("input[name='TotalRecurringPrice']").val(total.toFixed(2));
            return total.toFixed(2);
        }
        function popupHistories(id) {
            planning = _dataPlanning.find(c => c.planning.Id == id);
            $('#modal-histories .content-histories').html('');
            if (planning.histories.length == 0) $('#modal-histories .content-histories').append('<tr><td colspan="4" style="text-align: center;margin: 10px">No data</td></tr>');
            planning.histories.forEach(item => {
                var content = `<tr><td><a href="/order/estimatesdetail/?code=${item.RecurringOrder}" target="_blank">#${item.RecurringOrder}</a></td>
                            <td>${moment(item.CreatedAt).format("MMM DD, YYYY")}<br/>By: ${item.CreatedBy}</td>
                            <td><b>${item.TotalPrice == null ? "N/A" : ("$" + item.TotalPrice.toFixed(2)) }</b></td>
                            <td>`;
                content += (item.Message?.replaceAll('|', '<br/>') ?? "");
                content += '</td>';
                if (item.Status == 0) {
                    content += `<td><span class='label label-warning'>Incomplete</span></td>`
                }
                else {
                    content += `<td><span class='label label-success'>Complete</span></td>`
                }
                content += '</tr>';
                $('#modal-histories .content-histories').append(content);
            })
            $('#modal-histories .modal-title').html(`Recurring histories <b>#${planning.planning.Id}</b>`);
            $('#modal-histories').modal();
        }
        function deleteRecurring(id) {
            if (confirm("Are you sure you want to delete this Recurring?") == true) {
                overlayOn();
                $.ajax({
                    url: `/StoreReport/RemoveRecurringPlan?id=${planning.planning.Id}`,
                    type: "get",
                    success: function (data) {
                        if (data[0]) {
                            noty({ "text": data[1], "layout": "topRight", "type": "success" });
                            $("#table-service").DataTable().draw();
                            $("#modal-planning").modal("hide");
                        }
                        else {
                            noty({ "text": data[1], "layout": "topRight", "type": "error" });
                        }
                        overlayOff();
                    },
                })
            }
        }
    </script>
}