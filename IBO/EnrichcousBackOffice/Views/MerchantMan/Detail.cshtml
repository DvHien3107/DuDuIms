@model EnrichcousBackOffice.Models.C_Customer
@using EnrichcousBackOffice.Models.CustomizeModel
@using EnrichcousBackOffice.AppLB
@using EnrichcousBackOffice.Models
@using EnrichcousBackOffice.Utils.IEnums;
@{
    ViewBag.Title = "Detail";
    Dictionary<string, bool> p = ViewBag.p;

    bool customer_update = false;
    if (p.Any(k => k.Key.Equals("customer_update")) == true && p["customer_update"] == true)
    {
        customer_update = true;
    }
    var host = $"{HttpContext.Current.Request.Url.Scheme}://{HttpContext.Current.Request.Url.Authority}";
    int? Remaning = ViewBag.Remaning;
    var Partner = ViewBag.Partner as C_Partner;

    P_Member cMem = Authority.GetCurrentMember();
}

@if (cMem.SiteId != 1) { 
<style>
    .btn.btn-info.dropdown-toggle.btn-sm{
        display:none;
    }
</style>
}

<section class="content-header">
    <h1>
        Merchant Dashboard
        <small>Merchant</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/home"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li><i class="fa fa-fa-users"></i> Merchants</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <input type="hidden" id="CusId" value="@Model.Id" />
        <input type="hidden" id="CusCode" value="@Model.CustomerCode" />
        <input type="hidden" id="CusStoreStatus" value="@(Model.StoreStatus == true ? "true" : "")" /><!---->

        @if (TempData["e"] != null)
        {
            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-warning"></i> @TempData["e"]</span>
            </div>
        }
        else if (TempData["s"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <span><i class="icon fa fa-check"></i> @TempData["s"]</span>
            </div>
        }

        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header ">
                    <div class="col-md-9">
                        <div class="row">
                            <h3 class="box-title">
                                <span id="title_businessname">@Model.BusinessName</span>
                                @*<b style="font-size: 16px">
                                        #@Model.CustomerCode@if (string.IsNullOrWhiteSpace(Model.WordDetermine) == false)
                                        {<span id="WordDetermine-store">-@Model.WordDetermine</span>}
                                    </b>*@
                                <i>
                                    @if (!string.IsNullOrWhiteSpace(Model.StoreCode))
                                    {
                                        <label class="label label-warning" style="font-size: 16px">Store ID: @Model.StoreCode</label>
                                    }
                                </i>
                                <i>
                                    @if (!string.IsNullOrWhiteSpace(Partner.Code))
                                    {
                                        <label class="label label-default" style="font-size: 16px" data-toggle="tooltip" data-placement="bottom" title="@Partner.Name">#@Partner.Code</label>
                                    }
                                </i>
                                <i>
                                    <span id="remaining-wrapper">
                                        <img src="/Content/ajax-loaders/ajax-loader-1.gif">
                                    </span>

                                </i>
                            </h3><br />



                            @if (Model.Active == 0)
                            {
                                <p id="cus-status"><span class="label label-default" style="margin-top:10px">Inactive</span></p>
                            }
                            else if (Model.Active == -1)
                            {
                                <p id="cus-status"><span class="label" style="background-color:orangered">Not processing</span></p>
                            }
                            else
                            {
                                <p id="cus-status"><span class="label label-success">Active</span></p>
                            }
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="row">

                            <div class="btn-group pull-right">
                                @*<button type="button" class="btn btn-info"></button>*@
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" style="margin: 0 0 5px 5px" aria-expanded="false">
                                    <i class="fa fa-envelope" aria-hidden="true"></i> Email to merchant <span class="caret"></span><span class="sr-only"></span>
                                    <img style="display:none" id="send-email-to-customer" src="~/Content/ajax-loaders/ajax-loader-1.gif" />
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li>
                                        <button type="button" onclick="sendQuestionareEmail('@Model.CustomerCode')" class="btn btn-warning" style="margin: 0 0 5px 5px;text-align:left;color:white;">
                                            <i class="fa fa-send"></i> Email questionare
                                        </button>
                                    </li>
                                    <li>
                                        <button type="button" onclick="sendGiftCardForm('@Model.CustomerCode')" class="btn btn-success" style="margin: 0 0 5px 5px;text-align:left;width:94%">
                                            <i class="fa fa-share"></i> Gift card form
                                        </button>
                                    </li>
                                </ul>
                            </div>
                            @if (customer_update)
                            {
                                <button type="button" onclick="update_merchant('@Model.Id', 'true')" class="btn btn-primary pull-right" style="margin: 0 0 5px 5px">
                                    <i class="fa fa-pencil"> <span>Edit</span> </i>
                                </button>
                            }

                            <a @*onclick="window.history.back()"*@ href="@ViewBag.backUrl" class="btn btn-link pull-right" style="margin: 0 0 5px 5px"><i class="fa fa-arrow-left"></i> Go back</a>
                            @*<div class="btn-group">
                                    @if (string.IsNullOrEmpty(Request.QueryString["url_back"]) == false)
                                        {
                                            <a href="@(Request.QueryString["url_back"].Replace("'", ""))"><i class="fa fa-arrow-left"></i> Go back</a>
                                        }
                                        else
                                        {
                                            <a href="@ViewBag.url_back"><i class="fa fa-arrow-left"></i> Go back</a>
                                        }

                                    <div class="btn-group">

                                            <button type="button" class="btn btn-default btn-sm">
                                                    <i class="fa fa-exchange"> Merge</i>
                                                </button>
                                                <button type="button" class="btn btn-default btn-sm">
                                                    <i class="fa fa-rss"></i>
                                                </button>
                                            @if (p.Any(k => k.Key.Equals("customer_delete")) == false || p["customer_delete"] != true)
                                                {
                                                    <a type="button" class="btn btn-default btn-sm" href="/Merchantman/DeleteMerchant/@Model.Id" onclick="return confirm('You want to delete this merchant?')">
                                                        <i class="fa fa-trash-o"></i>
                                                    </a>
                                                }

                                        </div>
                                </div>*@

                        </div>
                    </div>

                </div>
                <!-- /.box-header -->

                <div class="box-body">
                    <div class="nav-tabs-custom" style="box-shadow:none">
                        <ul class="nav nav-tabs" id="main_tab">
                            <li id="detail"><a style="cursor: pointer;" data-toggle="tab" data-tab='detail'>Merchant Info</a></li>
                            @*<li id="ticket"><a style="cursor: pointer;" data-toggle="tab" data-tab='ticket'>Tickets (@ViewBag.TicketCount)</a></li>*@
                            <li id="files"><a style="cursor: pointer;" data-toggle="tab" data-tab='files'>Attachment (@ViewBag.FilesCount) </a></li>
                            @*@if (!"Trial".Equals(Model.WordDetermine))
        {
            <li id="products"><a style="cursor: pointer;" data-toggle="tab" data-tab='products'>Inventory</a></li>
        }*@
                            @if (p.Any(k => k.Key.Equals("merchantforms_manage")) == true && p["merchantforms_manage"] == true)
                            {
                                <li id="merchant"><a style="cursor: pointer;" data-toggle="tab" data-tab='merchant'>Merchant Manage</a></li>
                            }
                            <li id="services"><a style="cursor: pointer;" data-toggle="tab" data-tab='services'>Current plan/Purchased</a></li>
                            @*<li id="recurring"><a style="cursor: pointer;" data-toggle="tab" data-tab='recurring'>Recurring Plan</a></li>*@
                            @if (!"Trial".Equals(Model.WordDetermine))
                            {
                                <li id="transaction"><a style="cursor: pointer;" data-toggle="tab" data-tab='transaction'>Payment Transactions</a></li>
                                <li id="history"><a style="cursor: pointer;" data-toggle="tab" data-tab='history'>History</a></li>
                            }
                            @if (ViewBag.SMSProvideSystem == "IMS")
                            {
                                <li id="smshistory"><a style="cursor: pointer;" data-toggle="tab" data-tab='smshistory'>SMS History</a></li>
                            }

                            <!--<li id="subcriber"><a style="cursor: pointer;" data-toggle="tab" data-tab=('subcriber')">Merchant Subcriber</a></li>-->
                            @*<li><a style="cursor: pointer;" data-toggle="tab">Processing</a></li>
        <li><a style="cursor: pointer;" data-toggle="tab">Transactions</a></li>*@
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active">
                                <div style="text-align:center">
                                    <img id="load_partial_tab" src="~/Content/ajax-loaders/loading-partial.gif" style="display:none" />
                                </div>
                                <div id="partial_tab" style="min-height:300px;">

                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>

    </div>
</section>

<!--Modal merchant-->
<div id="merchant_popup">
    @*@Html.Partial("_MerchantPopupPartial", new C_Customer(), new ViewDataDictionary { { "update", false } })*@
</div>
<!--/.End-->
<!-- Modal content-->
<div class="modal fade" id="Invoice" role="dialog">
    <div class="modal-dialog modal-content" style="min-width:900px">
        <div class="modal-header">
            <div class="modal-title pull-left"><h3 style="margin:0">View Invoice</h3></div>
            <button type="button" class="btn btn-sm btn-warning" style="float:left; margin-left:20px" onclick="document.getElementById('invoice-view').contentWindow.print()"><i class="fa fa-print"></i> Print</button>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body" style="padding:1px;height: 77vh;">
            <iframe width='100%' height='100%' style="border: none;" id="invoice-view" data-src='@host/order/ImportInvoiceToPDF?_code=%code%&flag=Invoice'></iframe>
        </div>
    </div>
</div>
<div class="modal fade" id="add_addon_popup" role="dialog">
    <div class="modal-dialog modal-content" style="width:700px;">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><i class="fa fa-close"></i></button>
            <h4 class="modal-title">Select Addon</h4>
        </div>
        <div class="modal-body">
        </div>
        <div class="modal-footer sumary_wrapper" style="text-align:left;display:none;position:relative;">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <span style="transform: translateX(-5px);display: block;font-weight: bold;font-style: italic;font-size:15px;">Summary</span>
                </div>
                <div class="panel-body" style="padding:0px 15px;">
                    <div class="row">
                        <input type="hidden" id="month_qty" name="month_qty" />
                        <table class="table table-striped table-bordered summary-selected-license" style="border:none !important;margin-bottom:0px;">
                            <tbody>
                                <tr>
                                    <th class="col-md-3">Name</th>
                                    <td>
                                        <span style="border:none;" id="name_license">N/A</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="col-md-3">Subscription :</th>
                                    <td>
                                        <div>
                                            <label class="PriceType trial" style="margin-right:5px">
                                                <input type="checkbox" name="PriceType" value="Trial" class="minimal" required />
                                                <span style="display:inline-block;transform:translateY(2px)">&nbsp;Trial</span>
                                            </label>
                                            <label class="PriceType promo " style="margin-right:5px">
                                                <input type="checkbox" value="Promotional" name="PriceType" required />
                                                <span style="display:inline-block;transform:translateY(2px)"> &nbsp;Promotional Price</span>
                                            </label><br />
                                            <label class="PriceType real" style="transform:translateY(-20px)">
                                                <input type="checkbox" value="Real" name="PriceType" required />
                                                <span style="display:inline-block;transform:translateY(2px)">&nbsp;Regular Price</span>
                                                <b style="display:inline-block;transform:translateY(2px);margin:5px">X</b>
                                            </label>
                                            <label>
                                                <input type="number" class="form-control hide_arrow" id="ip_quantity" placeholder="1" min="1" step="1" value="1"
                                                       style="float:left;width:50px;height:35px" />
                                                <button class="btn btn-flat btn-default" type="button" style="float:left; margin-left:-2px;height:35px"
                                                        onclick="if($('#ip_quantity').val() > 1) $('#ip_quantity').val($('#ip_quantity').val() - 1).trigger('change')">
                                                    <i class="fa fa-minus"></i>
                                                </button>
                                                <button class="btn btn-flat btn-default" type="button" style="float:left; margin-left:-2px;height:35px"
                                                        onclick="$('#ip_quantity').val(parseInt($('#ip_quantity').val()) + 1).trigger('change')">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </label>
                                        </div>
                                        <div>
                                            <span style="font-style:italic;margin-top: 6px;display:block;color:red;font-size:13px;">(Note : Subscription expiration time will be accrued according to the selected price type.)</span>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="col-md-3">Custom date <i class="fa fa-exclamation-circle" aria-hidden="true" data-toggle="tooltip" title="Turn off to set start date is paid date"></i></th>
                                    <td>
                                        <div class="form-control"
                                             style="vertical-align:middle; font-weight:bold; height:34px; width: 70px;">
                                            <label class="switch" style="vertical-align: text-top; margin:2px auto; display:block; width:45px; height: 17px">
                                                <input id="ApplyDate" name="ApplyDate"
                                                       onclick="if ($(this).is(':checked') != true) {  $('.date_picker').fadeOut(); } else $('.date_picker').fadeIn();"
                                                       type="checkbox" value="false">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="tr-effective-date date_picker">
                                    <th class="col-md-3">Effective date :</th>
                                    <td>
                                        <input name="effect_addon_date" class="form-control datepicker" id="effect_date" style="background-color: #fff; width: 150px;" readonly value="@DateTime.UtcNow.UtcToIMSDateTime().ToString("MM/dd/yyyy")" />
                                    </td>
                                </tr>
                                <tr class="tr-expires-date date_picker">
                                    <th class="col-md-3">Expires date :</th>
                                    <td>
                                        <input class="form-control datepicker" type="text" name="Expiry_date" id="Expiry_date" readonly style="background-color: #fff; width: 150px;">
                                    </td>
                                </tr>
                                <tr>
                                    <th class="col-md-3">Total/Payment amount :</th>
                                    <td>
                                        <input class="form-control" id="total_payment_amount" style="width:150px;background:transparent;font-weight:bold;border:none;color:red;" name="total_payment_amount" value="" readonly>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="load_summary" style="position:absolute;top:50%;z-index: 99;right: 50%;transform: translate(50%,-50%);display:none;">
                            <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer" style="text-align: left">
            <!--sonho - 2021.02.27-->
            @*<div class="col-12 form-group">
                    <label class="label label-default" style="cursor:pointer; font-size: 14px"><input type="checkbox" id="payment-now" name="paymentNow" value="false" style="vertical-align: sub; font-size: 14px" /> Set As Paid</label>
                </div>*@
            <div class="col-12" id="form-payment-infor" hidden>
                <div class="form-group col-12">
                    <label class="control-label">Payment Date</label>
                    <input type="date" class="form-control" name="PaymentDate" id="PaymentDate" maxlength="50" style="max-width: 100%">
                </div>
                <div class="form-group col-12">
                    <label class="control-label">Payment method</label>
                    <select class="form-control" name="PaymentMethod" id="PaymentMethod" onchange="change_method()">
                        <option value="Wire transfer">Wire transfer</option>
                        <option value="Deposit">Deposit</option>
                        <option value="Paypal">Paypal</option>
                        <option value="Cash">Cash</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group col-12" id="form-bank-name">
                    <label class="control-label">Bank</label>
                    <input type="text" class="form-control" name="BankName" id="BankName" maxlength="50" style="max-width: 100%">
                </div>
                <div class="form-group col-12" id="form-card-number">
                    <label class="control-label">Card number (4 last digits)</label>
                    <input type="text" class="form-control" name="CardNumber" id="CardNumber" maxlength="4" style="max-width: 100%">
                </div>
                <div class="form-group col-12">
                    <label class="control-label">Descriptions</label>
                    <textarea type="text" class="form-control" name="PaymentNote" id="PaymentNote" maxlength="200" style="max-width: 100%"></textarea>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary pull-right" onclick="add_addon()">Submit <img src="~/Content/ajax-loaders/ajax-loader-1.gif" style="display:none" id="img_load_addon_submit" /></button>
        </div>
    </div>
</div>
<form method="post" action="/SalesLead/CreateOrUpdateStatusInteraction" class="modal fade" id="create-or-interaction-status">
    <div class="modal-dialog" style="width: 450px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="$('#create-or-interaction-status').modal('hide')" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <div id="modal-content">
                    <input type="hidden" name="Id" class="Id" />
                    <div class="form-group col-12">
                        <label class="control-label">Name<span style="color:red">*</span></label>
                        <input type="text" class="form-control" name="Name" style="max-width: 100%" required>
                    </div>
                    <div class="form-group col-12">
                        <label class="control-label">Order<span style="color:red">*</span></label>
                        <input type="number" class="form-control" name="Order" style="max-width: 100%" required>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" name="SaveBtn" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-default" onclick="$('#create-or-interaction-status').modal('hide')">Close</button>
            </div>
        </div>
    </div>
</form>
<!--Scrollbar css-->
<link href="~/Content/Scrollbar/style_Scrollbar.css" rel="stylesheet" />

@section style{
    <!--icheck-->
    <link rel="stylesheet" href="/content/admin/plugins/iCheck/all.css" />
    <!-- DataTables -->
    <link rel="stylesheet" href="~/content/admin/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">

    <style type="text/css">
        .nav-tabs li {
            font-size: 1.3em;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f0f8ff;
        }

        .bootstrap-touchspin .input-group-addon, .bootstrap-touchspin .input-group-btn {
            width: unset !important;
        }

        .table-striped tbody tr:nth-of-type(2n):not(.hide) {
            background-color: #fff;
        }

        .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {
            border: 1px solid rgb(222, 226, 230);
        }

        .summary-selected-license tr th {
            vertical-align: middle !important;
        }

        .breakline {
            white-space: pre-line;
        }

        .hide_arrow::-webkit-outer-spin-button,
        .hide_arrow::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .switch {
            width: 45px;
            border-radius: 10px;
        }

        input:checked + .slider:before {
            left: 30px !important;
        }
    </style>
}


@section script{


    <!--icheck-->
    <script src="/content/admin/plugins/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <!-- DataTables -->
    <script src="~/content/admin/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/content/admin/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
    <script type="text/javascript">

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue'
        });

        //Inactive checked khi xem chi tiet
        //$('input[type="checkbox"].inactive_unchecked').on('ifChanged', function (e) {
        //    var isChecked = e.currentTarget.checked;
        //    if (isChecked == false) {  //neu uncheck thi gan lai la check
        //        this.iCheck('check');
        //    }
        //    else {  //neu uncheck thi gan lai la check
        //        this.iCheck('uncheck');
        //    }
        //});
        //Load tab partial
        $(function () {
            var tabname = '@TempData["tabname"]';
            var openticket = '@Request["t"]';
            ChangeTab(tabname, openticket);
            $("#payment-now").change(function () {
                $("#form-payment-infor").fadeToggle();
                $("#payment-now").val($("#payment-now").is(":checked"));
                if ($("#payment-now").is(":checked")) {
                    $("#btn-create_estimate").hide();
                }
                else {
                    $("#btn-create_estimate").show();
                }
            })
        });

        function ChangeSubTab(tabname, Id) {
            $("#subtab_info").html('<div style="width:100%; text-align: center;"><img src="/Content/ajax-loaders/loading-partial.gif" /></div>');
            $(".nav-pills li").removeClass("active");
            $("#" + tabname).addClass("active");
            $.ajax({
                method: "POST",
                url: "/merchantman/ChangeSubTab",
                data: { tabname, Id },
                dataType: "html"
            })
                .done(function (data) {
                    $("#subtab_info").html(data);
                })
                .fail(function () {
                    alert("load failure");
                })
                .always(function () {
                });

        }

        function change_method() {
            if ($("select[name=PaymentMethod]").val() != 'Cash') {
                $('#form-bank-name').fadeIn();
                $('#form-card-number').fadeIn();
            }
            else {
                $('#form-bank-name').fadeOut();
                $('#form-card-number').fadeOut();
            }
        }

        function showPassDetail(span_id_show, span_id_unshow) {
            $("#" + span_id_show + "").show();
            $("#" + span_id_unshow + "").hide();
        };

        function update_merchant(_id, _update, tabname = null) {
            overlayOn();
            $.ajax({
                method: "POST",
                url: "/merchantman/GetMerchantInfo",
                data: { id: _id, update: _update },
                dataType: "html"
            })
                .done(function (data) {
                    $("#merchant_popup").html(data);
                    $("#modal-merchant").modal('show');
                    if (tabname != null) {
                        $('#' + tabname).trigger('click');
                    }
                })
                .fail(function () {
                    console.log("[GetMerchantInfo] - Oops! Something went wrong");
                    $("#modal-merchant").modal('hide');

                })
                .always(function () {
                    //$("#loading").hide();
                    overlayOff();
                });
        }
        $('#main_tab li a').on("click", function () {
            ChangeTab($(this).data('tab'));
        });
        function ChangeTab(tabname = $('#main_tab li[class=active] a').data('tab'), tkstatus = "All") {
            if (tabname == "") { tabname = "detail" };
            var id = $('#CusId').val();
            $("#load_partial_tab").show();
            $("#partial_tab").html('');

            $.ajax({
                method: "POST",
                url: "/Merchantman/ChangeTab",
                data: { tabname, id, tkstatus},
                dataType: "html"
            })
                .done(function (data) {
                    $("#main_tab>li").removeClass("active");
                    $("#" + tabname).addClass("active");
                    $("#partial_tab").html(data);
                })
                .fail(function (data) {
                    alert(data[0]);
                })
                .always(function () {
                    $("#load_partial_tab").hide();
                });
        };

        //save edit merchant completed
        function SaveComplete(data) {
            if (data[0] == true) {
                $('#modal-merchant').modal('toggle');

                if (data[1].Active == 1) {
                    $("#cus-status").html('<span class="label label-success">Active</span>');
                }
                else if (data[1].Active == -1) {
                    $("#cus-status").html('<span class="label" style="background-color:orangered">Not processing</span>');
                }
                else if (data[1].Active == 0) {
                    $("#cus-status").html('<span class="label label-default" style="margin-top:10px">Inactive</span>');
                }

                $('#title_businessname').html(data[1].BusinessName);

                var Success = $.parseJSON('{"text":"'+data[2]+'", "layout":"top", "type":"success"}');
                noty(Success);
                Reload_Addinfo_Table('@Model.Id');
                ChangeTab();
            }
            else {
                var Error = {"text": data[1], "layout":"top", "type":"error"};
                noty(Error);
            }
        };

        function reloadtab() {
            var subtab = $('#subtab .active').attr("id");
            if (subtab != null && subtab != "") {
                ChangeSubTab(subtab, '@Model.Id');
            }
        };

        function show_invoice(code) {
            let src = $("#invoice-view").data("src").replace("%code%", code);
        $("#invoice-view").attr("src", src);
        $('#Invoice').modal('show');
        }

        function Reload_Addinfo_Table(id) {
            $.ajax({
                method: "POST",
                url: "/merchantman/GetAddInfo",
                data: { id },
                dataType: "json"
            })
                .done(function (data) {
                    $("#additional_info_table tbody").empty();
                    for (var i = 0; i < Object.keys(data).length; i++) {
                        $("#additional_info_table tbody").append('<tr>'
                            + '<td style="text-align:center">' + (i + 1) + '</td>'
                            + '<td>' + data[i]["InfoName"] + '</td>'
                            + '<td>' + data[i]["InfoContent"].replace(/\n/g, "<br/>") + '</td>'
                            + '<td>' + data[i]["CreateBy"] + ' at ' + data[i]["CreateAt"].toString() + '</td>'
                            + '</tr>');
                    }
                })
                .fail(function () {
                })
        };
        /**
         * send questionare email to customer
         * @@param code customercode
         */
        function sendQuestionareEmail(code) {
            $("#send-email-to-customer").show();
            $.ajax({
                method: "POST",
                url: "/merchantman/SendQuestionareEmail",
                data: { code },
                dataType: "json"
            })
                .done(function (data) {
                    if (data[0]) {
                         var Success = $.parseJSON('{"text":"'+data[1]+'", "layout":"top", "type":"success"}');
                         noty(Success);
                    }
                    else {
                        var Error = $.parseJSON('{"text":"'+data[1]+'", "layout":"top", "type":"error"}');
                        noty(Error);
                    }

                })
                .fail(function () {
                    //alert("Oops! Something went wrong");
                     var Error = $.parseJSON('{"text":"Oops! Something went wrong", "layout":"top", "type":"error"}');
                     noty(Error);
                }).always(function () { $("#send-email-to-customer").hide(); });

        }

        function sendGiftCardForm(code) {
            $("#send-email-to-customer").show();
            $.ajax({
                method: "POST",
                url: "/merchantman/SendGiftCardForm",
                data: { code },
                dataType: "json"
            })
                .done(function (data) {
                    if (data[0]) {
                        var Success = $.parseJSON('{"text":"' + data[1] + '", "layout":"top", "type":"success"}');
                        noty(Success);
                    }
                    else {
                        var Error = $.parseJSON('{"text":"' + data[1] + '", "layout":"top", "type":"error"}');
                        noty(Error);
                    }

                })
                .fail(function () {
                    //alert("Oops! Something went wrong");
                    var Error = $.parseJSON('{"text":"Oops! Something went wrong", "layout":"top", "type":"error"}');
                    noty(Error);
                }).always(function () { $("#send-email-to-customer").hide(); });
        }
    </script>
    <script>
    let FlagCallHandleInteractionStatus = false;
    let InteractionStatusFormParam = {
        FormId: '#create-or-interaction-status',
        GetAllInteractionStatus: '/SaleLead/LoadInteraction_Status',
        GetInteractionStatusById: '/SaleLead/GetInteractionStatusById',
        InsertOrUpdateUrl: '/SaleLead/CreateOrUpdateStatusInteraction',
        DeleteInteractionStatus: '/SaleLead/DeleteInteractionStatus',
        DeleteUrl: '/SaleLead/DeleteInteractionStatus',
        StatusInteractionId: '#StatusInteraction'
    };
    let HandleInteractionStatus = {
            Init: function () {
                $(document).ready(function () {
                    this.register = function () {
                        $("#InsertInteractionStatus").off('click').on('click',function () {
                            debugger;
                            $(InteractionStatusFormParam.FormId).modal('show');
                            $(InteractionStatusFormParam.FormId).find(".modal-title").html('Create Interaction Status');
                            $(InteractionStatusFormParam.FormId + " [name=Id]").val('');
                            $(InteractionStatusFormParam.FormId + " [name=Name]").val('');
                            $(InteractionStatusFormParam.FormId + " [name=Order]").val(0);
                        })
                        $("#UpdateInteractionStatus").off('click').on('click',function () {
                            var SelectedInteractionStatus = $(InteractionStatusFormParam.StatusInteractionId).val();
                            if (SelectedInteractionStatus === '') {
                                return alert('Please select one Interaction Status !')
                            }
                            $.ajax({
                                url: InteractionStatusFormParam.GetInteractionStatusById,
                                type: 'POST',
                                data: { "Id": SelectedInteractionStatus},
                                dataType: 'json',
                                success: function (rs) {
                                    $(InteractionStatusFormParam.FormId).modal('show');
                                    $(InteractionStatusFormParam.FormId).find(".modal-title").html('Update Interaction Status');
                                    $(InteractionStatusFormParam.FormId + " [name=Id]").val(rs.Id);
                                    $(InteractionStatusFormParam.FormId + " [name=Name]").val(rs.Name);
                                    $(InteractionStatusFormParam.FormId + " [name=Order]").val(rs.Order);
                                    HandleInteractionStatus.RefreshInteractionStatusInSearchForm();
                                },
                                error: function (er) {
                                    console.log(er.responseText);
                                }
                            })
                        })
                        $("#DeleteInteractionStatus").off('click').on('click',function () {
                            var SelectedInteractionStatus = $(InteractionStatusFormParam.StatusInteractionId).val();
                            if (SelectedInteractionStatus === '') {
                                return alert('Please select one Interaction Status !')
                            }
                            confirmation = confirm("Are you sure delete this interaction status !");
                            if (!confirmation) {
                                return;
                            }
                            $.ajax({
                                url: InteractionStatusFormParam.DeleteInteractionStatus,
                                type: 'POST',
                                data: { "Id": SelectedInteractionStatus },
                                dataType: 'json',
                                success: function (rs) {
                                    HandleInteractionStatus.RefreshInteractionStatus();
                                    HandleInteractionStatus.RefreshInteractionStatusInSearchForm();
                                },
                                error: function (er) {
                                    console.log(er.responseText);
                                }
                            })
                        })

                        $(InteractionStatusFormParam.FormId + " [name=SaveBtn]").off('click').on('click',function () {
                                $.ajax({
                                    url: InteractionStatusFormParam.InsertOrUpdateUrl,
                                    type: 'POST',
                                    data: $(InteractionStatusFormParam.FormId).serialize(),
                                    dataType: 'json',
                                    success: function (rs) {
                                        $(InteractionStatusFormParam.FormId).modal('hide');
                                        HandleInteractionStatus.RefreshInteractionStatus(rs.Id);
                                        HandleInteractionStatus.RefreshInteractionStatusInSearchForm();
                                        noty({ "text": rs.message, "layout": "topRight", "type": "success" });
                                    },
                                    error: function (er) {
                                        console.log(er.responseText);
                                    }
                                })
                        })
                    }
                    this.register();
                })
            },
            RefreshInteractionStatus: function (selectedValue) {
                $.ajax({
                    url: InteractionStatusFormParam.GetAllInteractionStatus,
                    type: 'Get',
                    dataType: 'json',
                    success: function (data) {
                        $('[name=StatusInteraction]').html('');
                        $('[name=StatusInteraction]').append('<option value="">N/A</option>');
                        $.each(data, function (id, option) {
                            $('[name=StatusInteraction]').append($('<option></option>').val(option.Value).html(option.Text));
                        });
                        $("#log_popup").find('[name=StatusInteraction]').val(selectedValue);
                    },
                    error: function (er) {
                        console.log(er.responseText);
                    }
                })
            },
            RefreshInteractionStatusInSearchForm: function () {
                $.ajax({
                    url: InteractionStatusFormParam.GetAllInteractionStatus,
                    type: 'Get',
                    dataType: 'json',
                    success: function (data) {
                        $('#Status').html('');
                        $('#Status').append('<option value="">N/A</option>');
                        $.each(data, function (id, option) {
                            $('#Status').append($('<option></option>').val(option.Value).html(option.Text));
                        });
                    },
                    error: function (er) {
                        console.log(er.responseText);
                    }
                })
            }
        }
    let TicketTabParam = {
        TicketTable: "#ticketTable",
        LogHistoryWrapper: '#LogHistory_Wrapper',
        TicketWrapper: '#Ticket_Wrapper',
        BtnChangeStatusTicket: ".btn-change-statustk",
        BtnSearchTicket: "#search-ticket-submit",
        InputSearchTextTicketId: '#SearchText-Ticket',
        LoadingHistory: '.loadding-history',
        ContentHistory:'#content-history'
    }
    let TicketStatus = "all";
    let HandleTicketTab = {
        Init: function () {
            this.register = function () {
                HandleTicketTab.LoadDataTableTicket();
                $(TicketTabParam.BtnChangeStatusTicket).off('click').on('click', function () {
                    TicketStatus = $(this).attr("data-status");
                    $(TicketTabParam.BtnChangeStatusTicket).removeClass("btn-info active");
                    $(this).addClass("btn-info active");
                    HandleTicketTab.ReloadDatatableTicket();
                })
                $(TicketTabParam.BtnSearchTicket).off('click').on('click', function () {
                    HandleTicketTab.ReloadDatatableTicket();
                })
            }
            this.register();
        },
        RefreshHistoryLog: function () {
            $(TicketTabParam.LoadingHistory).show();
            $.ajax({
                url: "/MerchantMan/GetHistoryLog",
                dataType: "html",
                data:{"CustomerCode":"@Model.CustomerCode"},
                method: "post"
            })
                .done(function (result) {
                    $(TicketTabParam.LogHistoryWrapper).html(result);
                    $(TicketTabParam.LoadingHistory).hide();
                })
                .fail(function () {
                    alert("fail");
                    $(TicketTabParam.LoadingHistory).hide();
                })
        },
        LoadDataTableTicket: function () {
            $(TicketTabParam.TicketTable).DataTable({
            "language": {
                "processing": '<img src="/Content/ajax-loaders/loading2.gif" width="60px" />',
                "paginate": {
                    "first": '<i class="fa fa-angle-double-left" aria-hidden="true"></i>',
                    "last": '<i class="fa fa-angle-double-right" aria-hidden="true"></i>',
                    "next": '<i class="fa fa-angle-right" aria-hidden="true"></i>',
                    "previous": '<i class="fa fa-angle-left" aria-hidden="true"></i>'
                },
            },
            'paging': true,
            "pageLength": 10,
            "serverSide": true, // for process server side
            "processing": true, // for show progress bar
            'lengthChange': true,
            'searching': false,
            'stateSave': true,
            'info': false,
            "scrollX": true,
            'autoWidth': true,
            "ajax": {
                "url": "/MerchantMan/LoadTicket",
                "type": "POST",
                "datatype": "json",
                data: function (data) {
                    data.SearchText = $(TicketTabParam.InputSearchTextTicketId).val();
                    data.Status = TicketStatus;
                    data.CustomerCode = "@Model.CustomerCode";
                    return data;
                },
                'dataSrc': function (data) {
                    $("#all").html(data.allTicket);
                    $("#opened").html(data.openTicket + data.unassignedTicket);
                    $("#closed").html(data.closedTicket);
                    return data.data;
                }
            },
                'fnCreatedRow': function (nRow, aData, iDataIndex) {
                    if (aData.DateClosed !== '' && aData.DateClosed !== null) {
                        $(nRow).css('text-decoration-line', 'line-through');
                    }
            },
                "columns": [
                    {
                        "title": "#",
                        "name": "Id",
                        "render": function (data, type, row) {
                            let Id = row["Id"].toString();
                            let html = `#...${Id.slice(Id.length - 4)}`;
                            return html;
                        },
                        "width": 50,
                        "className": 'text-center',
                    },
                    {
                        "title": "Open date",
                        "name": "CreateAt",
                        "render": function (data, type, row) {
                            let html = `${moment(row["CreateAt"]).format('ll')}`;
                            return html;
                        },
                        "className": 'text-center',
                    },
                    {
                        "title": "Ticket Name",
                        "name": "Name",
                        "render": function (data, type, row) {
                        var html = ' <a  target="_blank" href="/ticket_new/detail/' + row["Id"] + '?urlback=/Merchantman/Detail/' + row["CustomerCode"] + '?tab=ticket%26t=' + TicketStatus + '"  title="Click here to open ticket" data-toggle="tooltip">' + row["Name"]+'</a>';
                            html += '<br />';
                            html += ' <i><b>Type: </b>' + row["TypeName"] + '</i>';
                            html += '<br />';
                            html += '<i style="color:grey;font-size:0.85em">';
                            var data = row["UpdateTicketHistory"];
                            if (data !== '') {
                                var arrUpdate = data.split("-");
                                if (arrUpdate.length == 2) {
                                    html += "<span>";
                                    html += moment(arrUpdate[0]).format("MMM DD YYYY, h:mm:ss A");
                                    html += "</span>";
                                    html += arrUpdate[1];
                                }
                            }
                            else
                            {
                                html += '<span>' + moment(row["CreateAt"]).format("MMM DD YYYY, h:mm:ss A") + '</span>';
                                html += ' by ' + row["CreateByName"];
                            }
                            html += '</i>';
                            html += "<br/>";
                            if (row['AssignedToMemberName'] != null && row['AssignedToMemberName']!="") {
                                var mem = row['AssignedToMemberName'].split(",");
                                    html += '<span style="display:block;width:100%;"><i class="fa fa-user bg-default" style="color:#333 !important;width: 19px;text-align:center;padding: 3px 5px 3px 0px;font-size: 12px;border-radius: 50%;" aria-hidden="true"></i>';
                                    for (i = 0; i < mem.length; i++)
                                    {
                                        if (mem[i]!=null&& mem[i]!="")
                                        {
                                            if (i + 2 < mem.length) {
                                                html += '<span style="margin-right:5px">' + mem[i] + ',</span>';
                                            }
                                            else {
                                                html += '<span style="margin-right:5px">' + mem[i] + '</span>';
                                            }
                                        }
                                    }
                                html += '</span>';
                            }

                            if (row['ReassignedToMemberName'] != null) {
                                html += '<label class="label label-success">' + row['ReassignedToMemberName'] + '</label>';
                            }
                        return html;
                    },
                        "className": 'align-middle',
                    },
                    {
                        "title": "Status",
                        "name": "State",
                        "data": "StatusName",
                        "className": 'text-center',
                        "width": 100,
                    },
                    {
                        "title": "Last updated",
                        "name": "CreateAt",
                        "render": function (data, type, row) {
                            let last = (row["UpdateTicketHistory"] || '').split('|').filter(i => i).slice(-1)[0];
                            let html = '';
                            if (last)
                                html = `<span>${moment(last.split("-")[0] + " UTC").format('MMM DD, YYYY hh:mm A')} - ${last.split("-")[1]}</span><br/>`;
                            return html;
                        },
                        "className": 'text-center',
                    },
                ]
            });
        },
        ReloadDatatableTicket: function () {
               $(TicketTabParam.TicketTable).DataTable().ajax.reload();
            }
        }
        function getRemainingDate() {
             $.ajax({
                url: "/MerchantMan/GetRemainingDate",
                dataType: "html",
                data:{"CustomerCode":"@Model.CustomerCode"},
                method: "post"
            })
                 .done(function (data) {
                     $("#remaining-wrapper").html(data);
                })
                .fail(function () {
                    alert("cannot get remaining date");

                })
        };
        getRemainingDate();
    </script>

}