@model EnrichcousBackOffice.Models.CustomizeModel.Ticket_Task_Template.TicketTaskTemplateDetail
@using EnrichcousBackOffice.Models.CustomizeModel
@using EnrichcousBackOffice.Models
@using EnrichcousBackOffice.Services.Tickets
@{
    var list_member = ViewBag.ListMember as List<MemberSelect_View> ?? new List<MemberSelect_View>();
    var task_files = ViewBag.TaskFiles as List<UploadMoreFile>;
    var list_subtask = Model.SubTaskTemplateList;
    int percent_complete = 0;
    int subtask_complete = list_subtask?.Where(st => st.Complete == true).Count() ?? 0;
    int subtask_all = list_subtask?.Count() ?? 0;
    var Reminder = ViewBag.Reminders as EnrichcousBackOffice.Models.T_RemindersTicket;

    var currentDate = Reminder.Date + Reminder.Time;
    if (list_subtask != null && list_subtask.Count() > 0)
    {
        //list_subtask = ViewBag.ListSubTask as List<Ts_Task>;

        if (list_subtask.Count() > 0)
        {
            percent_complete = (int)((float)list_subtask.Where(st => st.Complete == true).Count() / list_subtask.Count() * 100);
        }
    }
    else
    {
        subtask_complete = Model.Complete == true ? 1 : 0;
        percent_complete = Model.Complete == true ? 100 : 0;
    }
}
<style>
    .reminder-task-wrapper {
      
        background-color: #ffffff;
        margin-top: 15px;
    }
        .reminder-task-wrapper.active {
          
            border: 1px solid #d3d3d3;
        }
    .body-reminder {
        padding: 0px 15px;
    }
</style>
<div class="row">
    <input name="Id" value="@Model.Id" hidden />
    <input name="Description" value="@Model.Description" hidden />
    <input name="TicketId" value="@Model.TicketId" hidden />
    <input name="TaskTemplateCategoryId" value="@Model.TaskTemplateCategoryId" hidden />
    @Html.HiddenFor(model => model.Requirement)


    <div class="col-md-12" style="border-right: 1px solid lightgray">


        <div class="form-group" style="margin-bottom:0px">
            <label class="control-label">Task Name <span style="color:red">*</span></label>
            <input type="text" class="form-control" name="TaskName" required value="@Model.TaskName">
        </div>
        <div class="row">
            <div class="col-sm-12">
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <span style="font-size:14px;"><i>@Model.Description</i></span>
                }
            </div>
            <div class="col-sm-12">
                @Html.Partial("_UploadAttachments", task_files ?? new List<UploadMoreFile>(), new ViewDataDictionary { { "upload", true }, { "unique", Model.Id } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label">Assigned To</label>
            <select id="Assigned_select" class="form-control taskselect2" name="AssignMemberNumber" style="width:100%" multiple="multiple">
                @foreach (var item in list_member)
                {
                    <option @if (Model.AssignMemberNumber != null && Model.AssignMemberNumber.Contains(item.MemberNumber)) { @Html.Raw("selected") } value="@(item.MemberNumber)">@(item.Name) - #@(item.MemberNumber)</option>
                }
            </select>
        </div>
        <!--<div class="box-body no-padding" style="background-color: #F0F0F0; margin-bottom:20px">
            <ul class="users-list clearfix" id="list_img">
            </ul>-->
        <!-- /.users-list -->
        <!--</div>-->
    </div>

    <div class="col-md-10 col-xs-9 col-sm-9">
        <div class="form-group">
            <span id="_noty" class="pull-left"><i class="fa fa-pencil-square-o" style="color:#00a65a"></i> <span class="count_done">@(subtask_complete)</span>/<span class="count_all">@(subtask_all==0?1: subtask_all)</span> </span>
            <span id="_percent_task_ticket" class="pull-right" style="color:green"><b>@(percent_complete)%</b></span>
            <div class="clearfix"></div>
            <div class="progress progress-xs">
                <div id="progress_ticket_bar" class="progress-bar progress-bar-success progress-bar-striped" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @(percent_complete)%">
                    <span class="sr-only">60% Complete (success)</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-2 col-xs-3 col-sm-3" style="padding-left:0px">
        <div style="margin:auto; margin-top:10px; border: 1px solid #eee; text-align:center">
            <label class="control-label" style="cursor:pointer;">
                <input type="checkbox" class="minimal" id="complete_task_ticket_template" name="Complete" value="true" @if (Model.Complete == true) { @Html.Raw("checked") } /> ALL Completed
            </label>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="col-md-12">
        @if (Model.Requirement == true)
        {
            <i style="display:inline-block;color:#f39c12;padding:10px 5px;">- This task is required, so it must be completed before the ticket is closed.</i>
        }
    </div>

    <div id="list_subtask">
        <div class="col-md-12">
            <input type="hidden" id=" " name="sub_number_hd" value="1" />
            <table class="table table-bordered table-striped" style="margin-bottom:0">
                <thead>

                    <tr>
                        <th class="text-center">
                            <label class="pull-left" style="line-height:29px;">Sub tasks</label>
                            <button onclick="add_subtask_template();" type="button" class="btn btn-success"><i class="fa fa-plus" aria-hidden="true"></i> Add Sub Task</button>
                        </th>
                        <th style="width:100px">
                            <label>Completed</label>

                        </th>
                        <th style="width: 50px"><label>Action</label></th>
                    </tr>
                </thead>
                <tbody id="subtask_body_task_template">
                    @if (list_subtask.Count() > 0)
                    {
                        int i = 0;
                        foreach (var item in list_subtask)
                        {
                            <tr class="number-item-task-template">
                                <td>
                                    <input type="hidden" class="form-control SubTaskTemplateList_Id" name="SubTaskTemplateList[@i].Id" value="@item.Id" />
                                    <input type="hidden" class="form-control SubTaskTemplateList_Description" name="SubTaskTemplateList[@i].Description" value="@item.Description" />
                                    <input type="text" class="form-control SubTaskTemplateList_Name" name="SubTaskTemplateList[@i].Name" value="@item.Name" required />
                                    <div class="row">
                                        <div class="col-md-12">
                                            @if (!string.IsNullOrEmpty(item.Description))
                                            {
                                                <span style="font-size:13px;"><i class="fa fa-info-circle" style="color:#7d7d7d" aria-hidden="true"></i> : <i>@item.Description</i></span>
                                            }
                                        </div>
                                        <div class="col-md-12">
                                            @Html.Partial("_UploadAttachments", item.Files ?? new List<UploadMoreFile>(), new ViewDataDictionary { { "upload", true }, { "unique", item.Id } })
                                        </div>
                                    </div>

                                </td>
                                <td>
                                    <center><input type="checkbox" name="SubTaskTemplateList[@i].Complete" value="true" class="check_completed_task_ticket SubTaskTemplateList_Complete" @if (item.Complete == true) { @Html.Raw("checked") } onclick="refresh_progress_bar_task_ticket()" style="cursor:pointer" /></center>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger" title="Delete" onclick="detete_subtask_template(this)"><i class="fa fa-trash-o"></i></button>
                                </td>
                            </tr>
                            i++;
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-12">
        <div class="reminder-task-wrapper @(Reminder.Id>0?"active":"")">
            <div style="display: inline-flex; transform: translateY(-11px); background: white; padding: 0px 5px; ">
                <label class="control-label">Reminders</label>
                <div>
                    <div class="">
                        <label class="switch " style="vertical-align: text-top;margin-left:5px">
                            <input id="enable_ticket_reminder_edit" name="enableReminder" value="true" type="checkbox" @(Reminder.Id > 0 ? "checked" : "")>
                            <span class="slider round"></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="body-reminder" style="@(Reminder.Id>0?"":"display:none")">
                <div class="row">
                    <div class="col-sm-7">
                        <div class="form-group">
                            <label>Time <span id="gmt-feedback"></span>:</label>
                            <div style="display:flex;">
                                <input placeholder="Date" autocomplete="off" id="date-ticket-reminder-edit"  class="form-control" @(Reminder.Id > 0 ? "required" : "") />
                                <input placeholder="Time" autocomplete="off" style="margin-left:5px"  id="time-ticket-reminder-edit" class="form-control" @(Reminder.Id > 0 ? "required" : "") />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            <label>Repeat:</label>
                            <select name="Repeat" class="form-control">
                                <option value="@RepeatDefine.Never" @(Reminder?.Repeat == @RepeatDefine.Never ? "selected" : "")>Never</option>
                                <option value="@RepeatDefine.Daily" @(Reminder?.Repeat == @RepeatDefine.Daily ? "selected" : "")>Daily</option>
                                <option value="@RepeatDefine.Weekly" @(Reminder?.Repeat == @RepeatDefine.Weekly ? "selected" : "")>Weekly</option>
                                <option value="@RepeatDefine.Monthly" @(Reminder?.Repeat == @RepeatDefine.Monthly ? "selected" : "")>Monthly</option>
                            </select>

                        </div>
                    </div>
                  
                </div>
                
             

             

                <div class="form-group">
                    <label>Note:</label>
                    <textarea name="Note" class="form-control" rows="3">@(Reminder?.Note)</textarea>

                </div>


            </div>
        </div>



    </div>

</div>
<script>
    $("#gmt-feedback").html("(" + moment().format("Z") + ")");
    $("#Assigned_select").select2();
    $('#complete_task_ticket_template').iCheck({
        checkboxClass: 'icheckbox_minimal-blue',
    })

    function add_subtask_template() {
        var length = $('.number-item-task-template').length || 0;
        $.ajax({
            method: "POST",
            url: "/Ticket_New/AddSubTask",
            data: { 'Index': length },
            dataType: "html"
        }).done(function (data) {
            $("#subtask_body_task_template").append(data);
            var options = $.parseJSON('{"text":"add subtask success","layout":"topRight","type":"success"}');
            noty(options);
            refresh_progress_bar_task_ticket();
        })
            .fail(function () {
            });

    }

    function detete_subtask_template(el) {
        $(el).parents('tr').remove();
        $('.number-item-task-template').each(function (i, obj) {
            $(this).find('.SubTaskTemplateList_Id').attr('name', `SubTaskTemplateList[${i}].Id`);
            $(this).find('.SubTaskTemplateList_Description').attr('name', `SubTaskTemplateList[${i}].Description`);
            $(this).find('.SubTaskTemplateList_Name').attr('name', `SubTaskTemplateList[${i}].Name`);
            $(this).find('.SubTaskTemplateList_Complete').attr('name', `SubTaskTemplateList[${i}].Complete`);
        });
        refresh_progress_bar_task_ticket();
    }

    function ShowPicture(list_id) {
        $.ajax({
            method: "POST",
            url: "/TasksMan/GetPicture",
            data: { list_id: list_id.join(",") },
            dataType: "json"
        })
            .done(function (data) {
                if (data[0] == true) {
                    $("#list_img").empty();
                    for (var i = 0; i < data[1].length; i++) {
                        $("#list_img").append("<li><img src=\"" + (data[1][i]["Picture"] || "/Upload/Img/no_image.jpg") + "\" onerror=\"this.src='/Upload/Img/no_image.jpg'\" style='width:50px; height:50px;object-fit: cover;' alt=\"User Image\"><a class=\"users-list-name\" href=\"#\">" + data[1][i]["FullName"] + "</a></li>");
                    }
                }
            })
            .fail(function () {
            });
    }

    $("#complete_task_ticket_template").on("ifChecked", function () {
        var new_check = $('.check_completed_task_ticket');
        if (new_check.length) {
            new_check.prop('checked', true);
            refresh_progress_bar_task_ticket();
        }
        else {
            refresh_progress_bar_task_ticket();
        }
    })

    $("#complete_task_ticket_template").on("ifUnchecked", function () {

        var new_check = $('.check_completed_task_ticket');
        if ($('.check_completed_task_ticket:not(:checked)').length == 0) {
            if (new_check.length) {
                new_check.prop('checked', false);
                refresh_progress_bar_task_ticket();
            }
            else {
                setTimeout(function () {
                    $("#complete_task_ticket_template").iCheck('uncheck');
                    refresh_progress_bar_task_ticket();
                }, 0);

            }
        }
    })

    function refresh_progress_bar_task_ticket() {
        let count_all = $('.check_completed_task_ticket').length;
        let count_done = $('.check_completed_task_ticket:checked').length;
        let percen = (count_all == 0) ? $("#complete_task_ticket_template:not(:checked)").length ? 0 : 100 : parseInt(count_done / count_all * 100);
        $('#_percent_task_ticket').html('<b>' + percen + '%</b>');
        $('#progress_ticket_bar').css('width', percen + '%');

        if (percen == "100") {
            $("#complete_task_ticket_template:not(:checked)").iCheck('check');
        }
        else {
            $("#complete_task_ticket_template:checked").iCheck('uncheck');
        }
        $('#_noty .count_all').text(count_all == 0 ? 1 : count_all);
        $('#_noty .count_done').text(count_done == 0 ? 1 : count_done);
    }

    $("#enable_ticket_reminder_edit").change(function () {
        if ($(this).is(":checked"))
        {
            $(".reminder-task-wrapper").addClass('active');
            $(".body-reminder").slideDown();
            $('#date-reminder-edit').attr("required", "required");
            $('#time-reminder-edit').attr("required", "required");
        }
        else
        {
            $(".reminder-task-wrapper").removeClass('active');
            $(".body-reminder").slideUp();
            $('#date-reminder-edit').removeAttr("required");
            $('#time-reminder-edit').removeAttr("required");
        }
    })

    $('#date-ticket-reminder-edit').datepicker();

    $('#time-ticket-reminder-edit').datetimepicker({
        format: 'LT',
    });

   @if (Reminder.Id > 0)
    {
        <text>
       $('#date-ticket-reminder-edit').datepicker('setDate', moment("@string.Format("{0:r}", currentDate)").toDate());
       $('#time-ticket-reminder-edit').data('DateTimePicker').date(moment("@string.Format("{0:r}", currentDate)"));
        </text>
    }

</script>